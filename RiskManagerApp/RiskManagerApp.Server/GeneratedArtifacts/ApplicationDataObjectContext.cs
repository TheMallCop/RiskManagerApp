//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("LightSwitchApplication", "RiskAssessor_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.Employee), "RiskAssessor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.RiskAssessor), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "HazardType_RiskAssessmentHazard", "HazardType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.HazardType), "RiskAssessmentHazard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.RiskAssessmentHazard), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "RiskAssessmentReview_RiskAssessment", "RiskAssessment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.RiskAssessment), "RiskAssessmentReview", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.RiskAssessmentReview), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "RiskAssessmentHazard_RiskAssessment", "RiskAssessment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.RiskAssessment), "RiskAssessmentHazard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.RiskAssessmentHazard), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "RiskAssessmentStatus_RiskAssessment", "RiskAssessmentStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.RiskAssessmentStatus), "RiskAssessment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.RiskAssessment), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "RiskAssessment_RiskAssessor", "RiskAssessor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.RiskAssessor), "RiskAssessment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.RiskAssessment), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "RiskAssessment_RiskAssessor1", "RiskAssessor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.RiskAssessor), "RiskAssessment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.RiskAssessment), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "RiskAssessmentReview_RiskAssessor", "RiskAssessor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.RiskAssessor), "RiskAssessmentReview", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.RiskAssessmentReview), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "RiskType_RiskAssessment", "RiskType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.RiskType), "RiskAssessment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.RiskAssessment), true)]

#endregion

namespace LightSwitchApplication.Implementation
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ApplicationData : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ApplicationData object using the connection string found in the 'ApplicationData' section of the application configuration file.
        /// </summary>
        public ApplicationData() : base("name=ApplicationData", "ApplicationData")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ApplicationData object.
        /// </summary>
        public ApplicationData(string connectionString) : base(connectionString, "ApplicationData")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ApplicationData object.
        /// </summary>
        public ApplicationData(EntityConnection connection) : base(connection, "ApplicationData")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employee>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employee> _Employees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HazardType> HazardTypes
        {
            get
            {
                if ((_HazardTypes == null))
                {
                    _HazardTypes = base.CreateObjectSet<HazardType>("HazardTypes");
                }
                return _HazardTypes;
            }
        }
        private ObjectSet<HazardType> _HazardTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RiskAssessmentHazard> RiskAssessmentHazards
        {
            get
            {
                if ((_RiskAssessmentHazards == null))
                {
                    _RiskAssessmentHazards = base.CreateObjectSet<RiskAssessmentHazard>("RiskAssessmentHazards");
                }
                return _RiskAssessmentHazards;
            }
        }
        private ObjectSet<RiskAssessmentHazard> _RiskAssessmentHazards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RiskAssessmentReview> RiskAssessmentReviews
        {
            get
            {
                if ((_RiskAssessmentReviews == null))
                {
                    _RiskAssessmentReviews = base.CreateObjectSet<RiskAssessmentReview>("RiskAssessmentReviews");
                }
                return _RiskAssessmentReviews;
            }
        }
        private ObjectSet<RiskAssessmentReview> _RiskAssessmentReviews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RiskAssessment> RiskAssessments
        {
            get
            {
                if ((_RiskAssessments == null))
                {
                    _RiskAssessments = base.CreateObjectSet<RiskAssessment>("RiskAssessments");
                }
                return _RiskAssessments;
            }
        }
        private ObjectSet<RiskAssessment> _RiskAssessments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RiskAssessmentStatus> RiskAssessmentStatuses
        {
            get
            {
                if ((_RiskAssessmentStatuses == null))
                {
                    _RiskAssessmentStatuses = base.CreateObjectSet<RiskAssessmentStatus>("RiskAssessmentStatuses");
                }
                return _RiskAssessmentStatuses;
            }
        }
        private ObjectSet<RiskAssessmentStatus> _RiskAssessmentStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RiskAssessor> RiskAssessors
        {
            get
            {
                if ((_RiskAssessors == null))
                {
                    _RiskAssessors = base.CreateObjectSet<RiskAssessor>("RiskAssessors");
                }
                return _RiskAssessors;
            }
        }
        private ObjectSet<RiskAssessor> _RiskAssessors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RiskType> RiskTypes
        {
            get
            {
                if ((_RiskTypes == null))
                {
                    _RiskTypes = base.CreateObjectSet<RiskType>("RiskTypes");
                }
                return _RiskTypes;
            }
        }
        private ObjectSet<RiskType> _RiskTypes;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees(Employee employee)
        {
            base.AddObject("Employees", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HazardTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHazardTypes(HazardType hazardType)
        {
            base.AddObject("HazardTypes", hazardType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RiskAssessmentHazards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRiskAssessmentHazards(RiskAssessmentHazard riskAssessmentHazard)
        {
            base.AddObject("RiskAssessmentHazards", riskAssessmentHazard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RiskAssessmentReviews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRiskAssessmentReviews(RiskAssessmentReview riskAssessmentReview)
        {
            base.AddObject("RiskAssessmentReviews", riskAssessmentReview);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RiskAssessments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRiskAssessments(RiskAssessment riskAssessment)
        {
            base.AddObject("RiskAssessments", riskAssessment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RiskAssessmentStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRiskAssessmentStatuses(RiskAssessmentStatus riskAssessmentStatus)
        {
            base.AddObject("RiskAssessmentStatuses", riskAssessmentStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RiskAssessors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRiskAssessors(RiskAssessor riskAssessor)
        {
            base.AddObject("RiskAssessors", riskAssessor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RiskTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRiskTypes(RiskType riskType)
        {
            base.AddObject("RiskTypes", riskType);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="current">Initial value of the Current property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        public static Employee CreateEmployee(global::System.Int32 id, global::System.String lastName, global::System.String firstName, global::System.String userName, global::System.String email, global::System.Boolean current, global::System.Byte[] rowVersion)
        {
            Employee employee = new Employee();
            employee.Id = id;
            employee.LastName = lastName;
            employee.FirstName = firstName;
            employee.UserName = userName;
            employee.Email = email;
            employee.Current = current;
            employee.RowVersion = rowVersion;
            return employee;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = value;
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = value;
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = value;
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = value;
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Current
        {
            get
            {
                return _Current;
            }
            set
            {
                OnCurrentChanging(value);
                ReportPropertyChanging("Current");
                _Current = value;
                ReportPropertyChanged("Current");
                OnCurrentChanged();
            }
        }
        private global::System.Boolean _Current;
        partial void OnCurrentChanging(global::System.Boolean value);
        partial void OnCurrentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = value;
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Created;
        partial void OnCreatedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = value;
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Modified;
        partial void OnModifiedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "RiskAssessor_Employee", "RiskAssessor")]
        public RiskAssessor RiskAssessor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskAssessor>("LightSwitchApplication.RiskAssessor_Employee", "RiskAssessor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskAssessor>("LightSwitchApplication.RiskAssessor_Employee", "RiskAssessor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RiskAssessor> RiskAssessorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskAssessor>("LightSwitchApplication.RiskAssessor_Employee", "RiskAssessor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RiskAssessor>("LightSwitchApplication.RiskAssessor_Employee", "RiskAssessor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="HazardType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HazardType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HazardType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="hazardTypeDescription">Initial value of the HazardTypeDescription property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        public static HazardType CreateHazardType(global::System.Int32 id, global::System.String hazardTypeDescription, global::System.Byte[] rowVersion)
        {
            HazardType hazardType = new HazardType();
            hazardType.Id = id;
            hazardType.HazardTypeDescription = hazardTypeDescription;
            hazardType.RowVersion = rowVersion;
            return hazardType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HazardTypeDescription
        {
            get
            {
                return _HazardTypeDescription;
            }
            set
            {
                OnHazardTypeDescriptionChanging(value);
                ReportPropertyChanging("HazardTypeDescription");
                _HazardTypeDescription = value;
                ReportPropertyChanged("HazardTypeDescription");
                OnHazardTypeDescriptionChanged();
            }
        }
        private global::System.String _HazardTypeDescription;
        partial void OnHazardTypeDescriptionChanging(global::System.String value);
        partial void OnHazardTypeDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = value;
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Created;
        partial void OnCreatedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = value;
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Modified;
        partial void OnModifiedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "HazardType_RiskAssessmentHazard", "RiskAssessmentHazard")]
        public EntityCollection<RiskAssessmentHazard> RiskAssessmentHazards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskAssessmentHazard>("LightSwitchApplication.HazardType_RiskAssessmentHazard", "RiskAssessmentHazard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskAssessmentHazard>("LightSwitchApplication.HazardType_RiskAssessmentHazard", "RiskAssessmentHazard", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="RiskAssessment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RiskAssessment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RiskAssessment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="referenceNumber">Initial value of the ReferenceNumber property.</param>
        /// <param name="riskType_RiskAssessment">Initial value of the RiskType_RiskAssessment property.</param>
        /// <param name="riskAssessmentTitle">Initial value of the RiskAssessmentTitle property.</param>
        /// <param name="riskAssessment_RiskAssessor">Initial value of the RiskAssessment_RiskAssessor property.</param>
        /// <param name="riskAssessmentStatus_RiskAssessment">Initial value of the RiskAssessmentStatus_RiskAssessment property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        public static RiskAssessment CreateRiskAssessment(global::System.Int32 id, global::System.String referenceNumber, global::System.Int32 riskType_RiskAssessment, global::System.String riskAssessmentTitle, global::System.Int32 riskAssessment_RiskAssessor, global::System.Int32 riskAssessmentStatus_RiskAssessment, global::System.Byte[] rowVersion)
        {
            RiskAssessment riskAssessment = new RiskAssessment();
            riskAssessment.Id = id;
            riskAssessment.ReferenceNumber = referenceNumber;
            riskAssessment.RiskType_RiskAssessment = riskType_RiskAssessment;
            riskAssessment.RiskAssessmentTitle = riskAssessmentTitle;
            riskAssessment.RiskAssessment_RiskAssessor = riskAssessment_RiskAssessor;
            riskAssessment.RiskAssessmentStatus_RiskAssessment = riskAssessmentStatus_RiskAssessment;
            riskAssessment.RowVersion = rowVersion;
            return riskAssessment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReferenceNumber
        {
            get
            {
                return _ReferenceNumber;
            }
            set
            {
                OnReferenceNumberChanging(value);
                ReportPropertyChanging("ReferenceNumber");
                _ReferenceNumber = value;
                ReportPropertyChanged("ReferenceNumber");
                OnReferenceNumberChanged();
            }
        }
        private global::System.String _ReferenceNumber;
        partial void OnReferenceNumberChanging(global::System.String value);
        partial void OnReferenceNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RiskType_RiskAssessment
        {
            get
            {
                return _RiskType_RiskAssessment;
            }
            set
            {
                OnRiskType_RiskAssessmentChanging(value);
                ReportPropertyChanging("RiskType_RiskAssessment");
                _RiskType_RiskAssessment = value;
                ReportPropertyChanged("RiskType_RiskAssessment");
                OnRiskType_RiskAssessmentChanged();
            }
        }
        private global::System.Int32 _RiskType_RiskAssessment;
        partial void OnRiskType_RiskAssessmentChanging(global::System.Int32 value);
        partial void OnRiskType_RiskAssessmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RiskAssessmentTitle
        {
            get
            {
                return _RiskAssessmentTitle;
            }
            set
            {
                OnRiskAssessmentTitleChanging(value);
                ReportPropertyChanging("RiskAssessmentTitle");
                _RiskAssessmentTitle = value;
                ReportPropertyChanged("RiskAssessmentTitle");
                OnRiskAssessmentTitleChanged();
            }
        }
        private global::System.String _RiskAssessmentTitle;
        partial void OnRiskAssessmentTitleChanging(global::System.String value);
        partial void OnRiskAssessmentTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProcessDescription
        {
            get
            {
                return _ProcessDescription;
            }
            set
            {
                OnProcessDescriptionChanging(value);
                ReportPropertyChanging("ProcessDescription");
                _ProcessDescription = value;
                ReportPropertyChanged("ProcessDescription");
                OnProcessDescriptionChanged();
            }
        }
        private global::System.String _ProcessDescription;
        partial void OnProcessDescriptionChanging(global::System.String value);
        partial void OnProcessDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PersonsAffected
        {
            get
            {
                return _PersonsAffected;
            }
            set
            {
                OnPersonsAffectedChanging(value);
                ReportPropertyChanging("PersonsAffected");
                _PersonsAffected = value;
                ReportPropertyChanged("PersonsAffected");
                OnPersonsAffectedChanged();
            }
        }
        private global::System.String _PersonsAffected;
        partial void OnPersonsAffectedChanging(global::System.String value);
        partial void OnPersonsAffectedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HowPersonsAffected
        {
            get
            {
                return _HowPersonsAffected;
            }
            set
            {
                OnHowPersonsAffectedChanging(value);
                ReportPropertyChanging("HowPersonsAffected");
                _HowPersonsAffected = value;
                ReportPropertyChanged("HowPersonsAffected");
                OnHowPersonsAffectedChanged();
            }
        }
        private global::System.String _HowPersonsAffected;
        partial void OnHowPersonsAffectedChanging(global::System.String value);
        partial void OnHowPersonsAffectedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InherentLikelihood
        {
            get
            {
                return _InherentLikelihood;
            }
            set
            {
                OnInherentLikelihoodChanging(value);
                ReportPropertyChanging("InherentLikelihood");
                _InherentLikelihood = value;
                ReportPropertyChanged("InherentLikelihood");
                OnInherentLikelihoodChanged();
            }
        }
        private Nullable<global::System.Int32> _InherentLikelihood;
        partial void OnInherentLikelihoodChanging(Nullable<global::System.Int32> value);
        partial void OnInherentLikelihoodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InherentImpact
        {
            get
            {
                return _InherentImpact;
            }
            set
            {
                OnInherentImpactChanging(value);
                ReportPropertyChanging("InherentImpact");
                _InherentImpact = value;
                ReportPropertyChanged("InherentImpact");
                OnInherentImpactChanged();
            }
        }
        private Nullable<global::System.Int32> _InherentImpact;
        partial void OnInherentImpactChanging(Nullable<global::System.Int32> value);
        partial void OnInherentImpactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InherentRisk
        {
            get
            {
                return _InherentRisk;
            }
            set
            {
                OnInherentRiskChanging(value);
                ReportPropertyChanging("InherentRisk");
                _InherentRisk = value;
                ReportPropertyChanged("InherentRisk");
                OnInherentRiskChanged();
            }
        }
        private Nullable<global::System.Int32> _InherentRisk;
        partial void OnInherentRiskChanging(Nullable<global::System.Int32> value);
        partial void OnInherentRiskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ControlMeasures
        {
            get
            {
                return _ControlMeasures;
            }
            set
            {
                OnControlMeasuresChanging(value);
                ReportPropertyChanging("ControlMeasures");
                _ControlMeasures = value;
                ReportPropertyChanged("ControlMeasures");
                OnControlMeasuresChanged();
            }
        }
        private global::System.String _ControlMeasures;
        partial void OnControlMeasuresChanging(global::System.String value);
        partial void OnControlMeasuresChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ControlledLikehood
        {
            get
            {
                return _ControlledLikehood;
            }
            set
            {
                OnControlledLikehoodChanging(value);
                ReportPropertyChanging("ControlledLikehood");
                _ControlledLikehood = value;
                ReportPropertyChanged("ControlledLikehood");
                OnControlledLikehoodChanged();
            }
        }
        private Nullable<global::System.Int32> _ControlledLikehood;
        partial void OnControlledLikehoodChanging(Nullable<global::System.Int32> value);
        partial void OnControlledLikehoodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ControlledImpact
        {
            get
            {
                return _ControlledImpact;
            }
            set
            {
                OnControlledImpactChanging(value);
                ReportPropertyChanging("ControlledImpact");
                _ControlledImpact = value;
                ReportPropertyChanged("ControlledImpact");
                OnControlledImpactChanged();
            }
        }
        private Nullable<global::System.Int32> _ControlledImpact;
        partial void OnControlledImpactChanging(Nullable<global::System.Int32> value);
        partial void OnControlledImpactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ControlledRisk
        {
            get
            {
                return _ControlledRisk;
            }
            set
            {
                OnControlledRiskChanging(value);
                ReportPropertyChanging("ControlledRisk");
                _ControlledRisk = value;
                ReportPropertyChanged("ControlledRisk");
                OnControlledRiskChanged();
            }
        }
        private Nullable<global::System.Int32> _ControlledRisk;
        partial void OnControlledRiskChanging(Nullable<global::System.Int32> value);
        partial void OnControlledRiskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RiskAssessment_RiskAssessor
        {
            get
            {
                return _RiskAssessment_RiskAssessor;
            }
            set
            {
                OnRiskAssessment_RiskAssessorChanging(value);
                ReportPropertyChanging("RiskAssessment_RiskAssessor");
                _RiskAssessment_RiskAssessor = value;
                ReportPropertyChanged("RiskAssessment_RiskAssessor");
                OnRiskAssessment_RiskAssessorChanged();
            }
        }
        private global::System.Int32 _RiskAssessment_RiskAssessor;
        partial void OnRiskAssessment_RiskAssessorChanging(global::System.Int32 value);
        partial void OnRiskAssessment_RiskAssessorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RiskAssessmentStatus_RiskAssessment
        {
            get
            {
                return _RiskAssessmentStatus_RiskAssessment;
            }
            set
            {
                OnRiskAssessmentStatus_RiskAssessmentChanging(value);
                ReportPropertyChanging("RiskAssessmentStatus_RiskAssessment");
                _RiskAssessmentStatus_RiskAssessment = value;
                ReportPropertyChanged("RiskAssessmentStatus_RiskAssessment");
                OnRiskAssessmentStatus_RiskAssessmentChanged();
            }
        }
        private global::System.Int32 _RiskAssessmentStatus_RiskAssessment;
        partial void OnRiskAssessmentStatus_RiskAssessmentChanging(global::System.Int32 value);
        partial void OnRiskAssessmentStatus_RiskAssessmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RiskAssessment_RiskAssessor1
        {
            get
            {
                return _RiskAssessment_RiskAssessor1;
            }
            set
            {
                OnRiskAssessment_RiskAssessor1Changing(value);
                ReportPropertyChanging("RiskAssessment_RiskAssessor1");
                _RiskAssessment_RiskAssessor1 = value;
                ReportPropertyChanged("RiskAssessment_RiskAssessor1");
                OnRiskAssessment_RiskAssessor1Changed();
            }
        }
        private Nullable<global::System.Int32> _RiskAssessment_RiskAssessor1;
        partial void OnRiskAssessment_RiskAssessor1Changing(Nullable<global::System.Int32> value);
        partial void OnRiskAssessment_RiskAssessor1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateApproved
        {
            get
            {
                return _DateApproved;
            }
            set
            {
                OnDateApprovedChanging(value);
                ReportPropertyChanging("DateApproved");
                _DateApproved = value;
                ReportPropertyChanged("DateApproved");
                OnDateApprovedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateApproved;
        partial void OnDateApprovedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateEffective
        {
            get
            {
                return _DateEffective;
            }
            set
            {
                OnDateEffectiveChanging(value);
                ReportPropertyChanging("DateEffective");
                _DateEffective = value;
                ReportPropertyChanged("DateEffective");
                OnDateEffectiveChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateEffective;
        partial void OnDateEffectiveChanging(Nullable<global::System.DateTime> value);
        partial void OnDateEffectiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = value;
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Created;
        partial void OnCreatedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = value;
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Modified;
        partial void OnModifiedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "RiskType_RiskAssessment", "RiskType")]
        public RiskType RiskType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskType>("LightSwitchApplication.RiskType_RiskAssessment", "RiskType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskType>("LightSwitchApplication.RiskType_RiskAssessment", "RiskType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RiskType> RiskTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskType>("LightSwitchApplication.RiskType_RiskAssessment", "RiskType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RiskType>("LightSwitchApplication.RiskType_RiskAssessment", "RiskType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "RiskAssessment_RiskAssessor", "RiskAssessor")]
        public RiskAssessor RiskAssessor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskAssessor>("LightSwitchApplication.RiskAssessment_RiskAssessor", "RiskAssessor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskAssessor>("LightSwitchApplication.RiskAssessment_RiskAssessor", "RiskAssessor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RiskAssessor> RiskAssessorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskAssessor>("LightSwitchApplication.RiskAssessment_RiskAssessor", "RiskAssessor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RiskAssessor>("LightSwitchApplication.RiskAssessment_RiskAssessor", "RiskAssessor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "RiskAssessmentStatus_RiskAssessment", "RiskAssessmentStatus")]
        public RiskAssessmentStatus RiskAssessmentStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskAssessmentStatus>("LightSwitchApplication.RiskAssessmentStatus_RiskAssessment", "RiskAssessmentStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskAssessmentStatus>("LightSwitchApplication.RiskAssessmentStatus_RiskAssessment", "RiskAssessmentStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RiskAssessmentStatus> RiskAssessmentStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskAssessmentStatus>("LightSwitchApplication.RiskAssessmentStatus_RiskAssessment", "RiskAssessmentStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RiskAssessmentStatus>("LightSwitchApplication.RiskAssessmentStatus_RiskAssessment", "RiskAssessmentStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "RiskAssessment_RiskAssessor1", "RiskAssessor")]
        public RiskAssessor RiskAssessmentApprover
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskAssessor>("LightSwitchApplication.RiskAssessment_RiskAssessor1", "RiskAssessor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskAssessor>("LightSwitchApplication.RiskAssessment_RiskAssessor1", "RiskAssessor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RiskAssessor> RiskAssessmentApproverReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskAssessor>("LightSwitchApplication.RiskAssessment_RiskAssessor1", "RiskAssessor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RiskAssessor>("LightSwitchApplication.RiskAssessment_RiskAssessor1", "RiskAssessor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "RiskAssessmentReview_RiskAssessment", "RiskAssessmentReview")]
        public EntityCollection<RiskAssessmentReview> RiskAssessmentReviews
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskAssessmentReview>("LightSwitchApplication.RiskAssessmentReview_RiskAssessment", "RiskAssessmentReview");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskAssessmentReview>("LightSwitchApplication.RiskAssessmentReview_RiskAssessment", "RiskAssessmentReview", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "RiskAssessmentHazard_RiskAssessment", "RiskAssessmentHazard")]
        public EntityCollection<RiskAssessmentHazard> RiskAssessmentHazards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskAssessmentHazard>("LightSwitchApplication.RiskAssessmentHazard_RiskAssessment", "RiskAssessmentHazard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskAssessmentHazard>("LightSwitchApplication.RiskAssessmentHazard_RiskAssessment", "RiskAssessmentHazard", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="RiskAssessmentHazard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RiskAssessmentHazard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RiskAssessmentHazard object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="hazardDescription">Initial value of the HazardDescription property.</param>
        /// <param name="hazardType_RiskAssessmentHazard">Initial value of the HazardType_RiskAssessmentHazard property.</param>
        /// <param name="riskAssessmentHazard_RiskAssessment">Initial value of the RiskAssessmentHazard_RiskAssessment property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        public static RiskAssessmentHazard CreateRiskAssessmentHazard(global::System.Int32 id, global::System.String hazardDescription, global::System.Int32 hazardType_RiskAssessmentHazard, global::System.Int32 riskAssessmentHazard_RiskAssessment, global::System.Byte[] rowVersion)
        {
            RiskAssessmentHazard riskAssessmentHazard = new RiskAssessmentHazard();
            riskAssessmentHazard.Id = id;
            riskAssessmentHazard.HazardDescription = hazardDescription;
            riskAssessmentHazard.HazardType_RiskAssessmentHazard = hazardType_RiskAssessmentHazard;
            riskAssessmentHazard.RiskAssessmentHazard_RiskAssessment = riskAssessmentHazard_RiskAssessment;
            riskAssessmentHazard.RowVersion = rowVersion;
            return riskAssessmentHazard;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HazardDescription
        {
            get
            {
                return _HazardDescription;
            }
            set
            {
                OnHazardDescriptionChanging(value);
                ReportPropertyChanging("HazardDescription");
                _HazardDescription = value;
                ReportPropertyChanged("HazardDescription");
                OnHazardDescriptionChanged();
            }
        }
        private global::System.String _HazardDescription;
        partial void OnHazardDescriptionChanging(global::System.String value);
        partial void OnHazardDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HazardType_RiskAssessmentHazard
        {
            get
            {
                return _HazardType_RiskAssessmentHazard;
            }
            set
            {
                OnHazardType_RiskAssessmentHazardChanging(value);
                ReportPropertyChanging("HazardType_RiskAssessmentHazard");
                _HazardType_RiskAssessmentHazard = value;
                ReportPropertyChanged("HazardType_RiskAssessmentHazard");
                OnHazardType_RiskAssessmentHazardChanged();
            }
        }
        private global::System.Int32 _HazardType_RiskAssessmentHazard;
        partial void OnHazardType_RiskAssessmentHazardChanging(global::System.Int32 value);
        partial void OnHazardType_RiskAssessmentHazardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HazardConsequence
        {
            get
            {
                return _HazardConsequence;
            }
            set
            {
                OnHazardConsequenceChanging(value);
                ReportPropertyChanging("HazardConsequence");
                _HazardConsequence = value;
                ReportPropertyChanged("HazardConsequence");
                OnHazardConsequenceChanged();
            }
        }
        private global::System.String _HazardConsequence;
        partial void OnHazardConsequenceChanging(global::System.String value);
        partial void OnHazardConsequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ControlMeasures
        {
            get
            {
                return _ControlMeasures;
            }
            set
            {
                OnControlMeasuresChanging(value);
                ReportPropertyChanging("ControlMeasures");
                _ControlMeasures = value;
                ReportPropertyChanged("ControlMeasures");
                OnControlMeasuresChanged();
            }
        }
        private global::System.String _ControlMeasures;
        partial void OnControlMeasuresChanging(global::System.String value);
        partial void OnControlMeasuresChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RiskAssessmentHazard_RiskAssessment
        {
            get
            {
                return _RiskAssessmentHazard_RiskAssessment;
            }
            set
            {
                OnRiskAssessmentHazard_RiskAssessmentChanging(value);
                ReportPropertyChanging("RiskAssessmentHazard_RiskAssessment");
                _RiskAssessmentHazard_RiskAssessment = value;
                ReportPropertyChanged("RiskAssessmentHazard_RiskAssessment");
                OnRiskAssessmentHazard_RiskAssessmentChanged();
            }
        }
        private global::System.Int32 _RiskAssessmentHazard_RiskAssessment;
        partial void OnRiskAssessmentHazard_RiskAssessmentChanging(global::System.Int32 value);
        partial void OnRiskAssessmentHazard_RiskAssessmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = value;
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Created;
        partial void OnCreatedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = value;
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Modified;
        partial void OnModifiedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "HazardType_RiskAssessmentHazard", "HazardType")]
        public HazardType HazardType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HazardType>("LightSwitchApplication.HazardType_RiskAssessmentHazard", "HazardType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HazardType>("LightSwitchApplication.HazardType_RiskAssessmentHazard", "HazardType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HazardType> HazardTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HazardType>("LightSwitchApplication.HazardType_RiskAssessmentHazard", "HazardType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HazardType>("LightSwitchApplication.HazardType_RiskAssessmentHazard", "HazardType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "RiskAssessmentHazard_RiskAssessment", "RiskAssessment")]
        public RiskAssessment RiskAssessment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskAssessment>("LightSwitchApplication.RiskAssessmentHazard_RiskAssessment", "RiskAssessment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskAssessment>("LightSwitchApplication.RiskAssessmentHazard_RiskAssessment", "RiskAssessment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RiskAssessment> RiskAssessmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskAssessment>("LightSwitchApplication.RiskAssessmentHazard_RiskAssessment", "RiskAssessment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RiskAssessment>("LightSwitchApplication.RiskAssessmentHazard_RiskAssessment", "RiskAssessment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="RiskAssessmentReview")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RiskAssessmentReview : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RiskAssessmentReview object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="dateDue">Initial value of the DateDue property.</param>
        /// <param name="riskAssessmentReview_RiskAssessment">Initial value of the RiskAssessmentReview_RiskAssessment property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        public static RiskAssessmentReview CreateRiskAssessmentReview(global::System.Int32 id, global::System.DateTime dateDue, global::System.Int32 riskAssessmentReview_RiskAssessment, global::System.Byte[] rowVersion)
        {
            RiskAssessmentReview riskAssessmentReview = new RiskAssessmentReview();
            riskAssessmentReview.Id = id;
            riskAssessmentReview.DateDue = dateDue;
            riskAssessmentReview.RiskAssessmentReview_RiskAssessment = riskAssessmentReview_RiskAssessment;
            riskAssessmentReview.RowVersion = rowVersion;
            return riskAssessmentReview;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateDue
        {
            get
            {
                return _DateDue;
            }
            set
            {
                OnDateDueChanging(value);
                ReportPropertyChanging("DateDue");
                _DateDue = value;
                ReportPropertyChanged("DateDue");
                OnDateDueChanged();
            }
        }
        private global::System.DateTime _DateDue;
        partial void OnDateDueChanging(global::System.DateTime value);
        partial void OnDateDueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCompleted
        {
            get
            {
                return _DateCompleted;
            }
            set
            {
                OnDateCompletedChanging(value);
                ReportPropertyChanging("DateCompleted");
                _DateCompleted = value;
                ReportPropertyChanged("DateCompleted");
                OnDateCompletedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCompleted;
        partial void OnDateCompletedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Outcome
        {
            get
            {
                return _Outcome;
            }
            set
            {
                OnOutcomeChanging(value);
                ReportPropertyChanging("Outcome");
                _Outcome = value;
                ReportPropertyChanged("Outcome");
                OnOutcomeChanged();
            }
        }
        private global::System.String _Outcome;
        partial void OnOutcomeChanging(global::System.String value);
        partial void OnOutcomeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RiskAssessmentReview_RiskAssessor
        {
            get
            {
                return _RiskAssessmentReview_RiskAssessor;
            }
            set
            {
                OnRiskAssessmentReview_RiskAssessorChanging(value);
                ReportPropertyChanging("RiskAssessmentReview_RiskAssessor");
                _RiskAssessmentReview_RiskAssessor = value;
                ReportPropertyChanged("RiskAssessmentReview_RiskAssessor");
                OnRiskAssessmentReview_RiskAssessorChanged();
            }
        }
        private Nullable<global::System.Int32> _RiskAssessmentReview_RiskAssessor;
        partial void OnRiskAssessmentReview_RiskAssessorChanging(Nullable<global::System.Int32> value);
        partial void OnRiskAssessmentReview_RiskAssessorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RiskAssessmentReview_RiskAssessment
        {
            get
            {
                return _RiskAssessmentReview_RiskAssessment;
            }
            set
            {
                OnRiskAssessmentReview_RiskAssessmentChanging(value);
                ReportPropertyChanging("RiskAssessmentReview_RiskAssessment");
                _RiskAssessmentReview_RiskAssessment = value;
                ReportPropertyChanged("RiskAssessmentReview_RiskAssessment");
                OnRiskAssessmentReview_RiskAssessmentChanged();
            }
        }
        private global::System.Int32 _RiskAssessmentReview_RiskAssessment;
        partial void OnRiskAssessmentReview_RiskAssessmentChanging(global::System.Int32 value);
        partial void OnRiskAssessmentReview_RiskAssessmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = value;
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Created;
        partial void OnCreatedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = value;
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Modified;
        partial void OnModifiedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "RiskAssessmentReview_RiskAssessor", "RiskAssessor")]
        public RiskAssessor RiskAssessmentReviewer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskAssessor>("LightSwitchApplication.RiskAssessmentReview_RiskAssessor", "RiskAssessor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskAssessor>("LightSwitchApplication.RiskAssessmentReview_RiskAssessor", "RiskAssessor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RiskAssessor> RiskAssessmentReviewerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskAssessor>("LightSwitchApplication.RiskAssessmentReview_RiskAssessor", "RiskAssessor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RiskAssessor>("LightSwitchApplication.RiskAssessmentReview_RiskAssessor", "RiskAssessor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "RiskAssessmentReview_RiskAssessment", "RiskAssessment")]
        public RiskAssessment RiskAssessment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskAssessment>("LightSwitchApplication.RiskAssessmentReview_RiskAssessment", "RiskAssessment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskAssessment>("LightSwitchApplication.RiskAssessmentReview_RiskAssessment", "RiskAssessment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RiskAssessment> RiskAssessmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskAssessment>("LightSwitchApplication.RiskAssessmentReview_RiskAssessment", "RiskAssessment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RiskAssessment>("LightSwitchApplication.RiskAssessmentReview_RiskAssessment", "RiskAssessment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="RiskAssessmentStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RiskAssessmentStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RiskAssessmentStatus object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        public static RiskAssessmentStatus CreateRiskAssessmentStatus(global::System.Int32 id, global::System.String status, global::System.Byte[] rowVersion)
        {
            RiskAssessmentStatus riskAssessmentStatus = new RiskAssessmentStatus();
            riskAssessmentStatus.Id = id;
            riskAssessmentStatus.Status = status;
            riskAssessmentStatus.RowVersion = rowVersion;
            return riskAssessmentStatus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = value;
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = value;
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Created;
        partial void OnCreatedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = value;
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Modified;
        partial void OnModifiedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "RiskAssessmentStatus_RiskAssessment", "RiskAssessment")]
        public EntityCollection<RiskAssessment> RiskAssessments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskAssessment>("LightSwitchApplication.RiskAssessmentStatus_RiskAssessment", "RiskAssessment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskAssessment>("LightSwitchApplication.RiskAssessmentStatus_RiskAssessment", "RiskAssessment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="RiskAssessor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RiskAssessor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RiskAssessor object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="dateTrained">Initial value of the DateTrained property.</param>
        /// <param name="dateRefresherTrainingDue">Initial value of the DateRefresherTrainingDue property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        public static RiskAssessor CreateRiskAssessor(global::System.Int32 id, global::System.DateTime dateTrained, global::System.DateTime dateRefresherTrainingDue, global::System.Byte[] rowVersion)
        {
            RiskAssessor riskAssessor = new RiskAssessor();
            riskAssessor.Id = id;
            riskAssessor.DateTrained = dateTrained;
            riskAssessor.DateRefresherTrainingDue = dateRefresherTrainingDue;
            riskAssessor.RowVersion = rowVersion;
            return riskAssessor;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTrained
        {
            get
            {
                return _DateTrained;
            }
            set
            {
                OnDateTrainedChanging(value);
                ReportPropertyChanging("DateTrained");
                _DateTrained = value;
                ReportPropertyChanged("DateTrained");
                OnDateTrainedChanged();
            }
        }
        private global::System.DateTime _DateTrained;
        partial void OnDateTrainedChanging(global::System.DateTime value);
        partial void OnDateTrainedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateRefresherTrainingDue
        {
            get
            {
                return _DateRefresherTrainingDue;
            }
            set
            {
                OnDateRefresherTrainingDueChanging(value);
                ReportPropertyChanging("DateRefresherTrainingDue");
                _DateRefresherTrainingDue = value;
                ReportPropertyChanged("DateRefresherTrainingDue");
                OnDateRefresherTrainingDueChanged();
            }
        }
        private global::System.DateTime _DateRefresherTrainingDue;
        partial void OnDateRefresherTrainingDueChanging(global::System.DateTime value);
        partial void OnDateRefresherTrainingDueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = value;
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Created;
        partial void OnCreatedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = value;
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Modified;
        partial void OnModifiedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "RiskAssessor_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("LightSwitchApplication.RiskAssessor_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("LightSwitchApplication.RiskAssessor_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("LightSwitchApplication.RiskAssessor_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("LightSwitchApplication.RiskAssessor_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "RiskAssessment_RiskAssessor", "RiskAssessment")]
        public EntityCollection<RiskAssessment> RiskAssessments_RiskAssessor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskAssessment>("LightSwitchApplication.RiskAssessment_RiskAssessor", "RiskAssessment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskAssessment>("LightSwitchApplication.RiskAssessment_RiskAssessor", "RiskAssessment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "RiskAssessment_RiskAssessor1", "RiskAssessment")]
        public EntityCollection<RiskAssessment> RiskAssessments_Approver
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskAssessment>("LightSwitchApplication.RiskAssessment_RiskAssessor1", "RiskAssessment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskAssessment>("LightSwitchApplication.RiskAssessment_RiskAssessor1", "RiskAssessment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "RiskAssessmentReview_RiskAssessor", "RiskAssessmentReview")]
        public EntityCollection<RiskAssessmentReview> RiskAssessmentReviews
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskAssessmentReview>("LightSwitchApplication.RiskAssessmentReview_RiskAssessor", "RiskAssessmentReview");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskAssessmentReview>("LightSwitchApplication.RiskAssessmentReview_RiskAssessor", "RiskAssessmentReview", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="RiskType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RiskType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RiskType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="typeOfRisk">Initial value of the TypeOfRisk property.</param>
        /// <param name="inUse">Initial value of the InUse property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        public static RiskType CreateRiskType(global::System.Int32 id, global::System.String typeOfRisk, global::System.Boolean inUse, global::System.Byte[] rowVersion)
        {
            RiskType riskType = new RiskType();
            riskType.Id = id;
            riskType.TypeOfRisk = typeOfRisk;
            riskType.InUse = inUse;
            riskType.RowVersion = rowVersion;
            return riskType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeOfRisk
        {
            get
            {
                return _TypeOfRisk;
            }
            set
            {
                OnTypeOfRiskChanging(value);
                ReportPropertyChanging("TypeOfRisk");
                _TypeOfRisk = value;
                ReportPropertyChanged("TypeOfRisk");
                OnTypeOfRiskChanged();
            }
        }
        private global::System.String _TypeOfRisk;
        partial void OnTypeOfRiskChanging(global::System.String value);
        partial void OnTypeOfRiskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean InUse
        {
            get
            {
                return _InUse;
            }
            set
            {
                OnInUseChanging(value);
                ReportPropertyChanging("InUse");
                _InUse = value;
                ReportPropertyChanged("InUse");
                OnInUseChanged();
            }
        }
        private global::System.Boolean _InUse;
        partial void OnInUseChanging(global::System.Boolean value);
        partial void OnInUseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = value;
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Created;
        partial void OnCreatedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = value;
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Modified;
        partial void OnModifiedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "RiskType_RiskAssessment", "RiskAssessment")]
        public EntityCollection<RiskAssessment> RiskAssessments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskAssessment>("LightSwitchApplication.RiskType_RiskAssessment", "RiskAssessment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskAssessment>("LightSwitchApplication.RiskType_RiskAssessment", "RiskAssessment", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
