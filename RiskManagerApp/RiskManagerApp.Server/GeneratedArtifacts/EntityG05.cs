

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    public sealed partial class RiskAssessment : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the RiskAssessment entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RiskAssessment()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RiskAssessment(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.RiskAssessment> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.RiskAssessment.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RiskAssessment_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RiskAssessment_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.RiskAssessment.DetailsClass.GetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.RiskAssessment.DetailsClass.SetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ReferenceNumber
        {
            get
            {
                return global::LightSwitchApplication.RiskAssessment.DetailsClass.GetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.ReferenceNumber);
            }
            set
            {
                global::LightSwitchApplication.RiskAssessment.DetailsClass.SetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.ReferenceNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReferenceNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReferenceNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReferenceNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string RiskAssessmentTitle
        {
            get
            {
                return global::LightSwitchApplication.RiskAssessment.DetailsClass.GetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskAssessmentTitle);
            }
            set
            {
                global::LightSwitchApplication.RiskAssessment.DetailsClass.SetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskAssessmentTitle, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RiskAssessmentTitle_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RiskAssessmentTitle_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RiskAssessmentTitle_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProcessDescription
        {
            get
            {
                return global::LightSwitchApplication.RiskAssessment.DetailsClass.GetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.ProcessDescription);
            }
            set
            {
                global::LightSwitchApplication.RiskAssessment.DetailsClass.SetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.ProcessDescription, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProcessDescription_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProcessDescription_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProcessDescription_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PersonsAffected
        {
            get
            {
                return global::LightSwitchApplication.RiskAssessment.DetailsClass.GetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.PersonsAffected);
            }
            set
            {
                global::LightSwitchApplication.RiskAssessment.DetailsClass.SetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.PersonsAffected, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PersonsAffected_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PersonsAffected_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PersonsAffected_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string HowPersonsAffected
        {
            get
            {
                return global::LightSwitchApplication.RiskAssessment.DetailsClass.GetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.HowPersonsAffected);
            }
            set
            {
                global::LightSwitchApplication.RiskAssessment.DetailsClass.SetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.HowPersonsAffected, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HowPersonsAffected_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HowPersonsAffected_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HowPersonsAffected_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> InherentLikelihood
        {
            get
            {
                return global::LightSwitchApplication.RiskAssessment.DetailsClass.GetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.InherentLikelihood);
            }
            set
            {
                global::LightSwitchApplication.RiskAssessment.DetailsClass.SetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.InherentLikelihood, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InherentLikelihood_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InherentLikelihood_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InherentLikelihood_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> InherentImpact
        {
            get
            {
                return global::LightSwitchApplication.RiskAssessment.DetailsClass.GetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.InherentImpact);
            }
            set
            {
                global::LightSwitchApplication.RiskAssessment.DetailsClass.SetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.InherentImpact, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InherentImpact_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InherentImpact_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InherentImpact_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> InherentRisk
        {
            get
            {
                return global::LightSwitchApplication.RiskAssessment.DetailsClass.GetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.InherentRisk);
            }
            set
            {
                global::LightSwitchApplication.RiskAssessment.DetailsClass.SetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.InherentRisk, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InherentRisk_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InherentRisk_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InherentRisk_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ControlMeasures
        {
            get
            {
                return global::LightSwitchApplication.RiskAssessment.DetailsClass.GetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.ControlMeasures);
            }
            set
            {
                global::LightSwitchApplication.RiskAssessment.DetailsClass.SetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.ControlMeasures, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ControlMeasures_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ControlMeasures_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ControlMeasures_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ControlledLikehood
        {
            get
            {
                return global::LightSwitchApplication.RiskAssessment.DetailsClass.GetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.ControlledLikehood);
            }
            set
            {
                global::LightSwitchApplication.RiskAssessment.DetailsClass.SetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.ControlledLikehood, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ControlledLikehood_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ControlledLikehood_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ControlledLikehood_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ControlledImpact
        {
            get
            {
                return global::LightSwitchApplication.RiskAssessment.DetailsClass.GetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.ControlledImpact);
            }
            set
            {
                global::LightSwitchApplication.RiskAssessment.DetailsClass.SetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.ControlledImpact, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ControlledImpact_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ControlledImpact_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ControlledImpact_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ControlledRisk
        {
            get
            {
                return global::LightSwitchApplication.RiskAssessment.DetailsClass.GetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.ControlledRisk);
            }
            set
            {
                global::LightSwitchApplication.RiskAssessment.DetailsClass.SetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.ControlledRisk, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ControlledRisk_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ControlledRisk_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ControlledRisk_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> DateApproved
        {
            get
            {
                return global::LightSwitchApplication.RiskAssessment.DetailsClass.GetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.DateApproved);
            }
            set
            {
                global::LightSwitchApplication.RiskAssessment.DetailsClass.SetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.DateApproved, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateApproved_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateApproved_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateApproved_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> DateEffective
        {
            get
            {
                return global::LightSwitchApplication.RiskAssessment.DetailsClass.GetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.DateEffective);
            }
            set
            {
                global::LightSwitchApplication.RiskAssessment.DetailsClass.SetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.DateEffective, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateEffective_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateEffective_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateEffective_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.RiskAssessment.DetailsClass.GetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.CreatedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Changed();
        public global::Microsoft.LightSwitch.Framework.Server.PersonInfo CreatedByInfo
        {
            get
            {
                global::Microsoft.LightSwitch.Server.IPersonInfoFactory personInfoFactory = global::LightSwitchApplication.Application.Current.GetPersonInfoFactory();
                return (global::Microsoft.LightSwitch.Framework.Server.PersonInfo) personInfoFactory.ResolvePerson(this.CreatedBy);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return global::LightSwitchApplication.RiskAssessment.DetailsClass.GetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.Created);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.RiskAssessment.DetailsClass.GetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.ModifiedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Changed();
        public global::Microsoft.LightSwitch.Framework.Server.PersonInfo ModifiedByInfo
        {
            get
            {
                global::Microsoft.LightSwitch.Server.IPersonInfoFactory personInfoFactory = global::LightSwitchApplication.Application.Current.GetPersonInfoFactory();
                return (global::Microsoft.LightSwitch.Framework.Server.PersonInfo) personInfoFactory.ResolvePerson(this.ModifiedBy);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return global::LightSwitchApplication.RiskAssessment.DetailsClass.GetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.Modified);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.RiskAssessment.DetailsClass.GetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.RiskAssessment.DetailsClass.SetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.RiskType RiskType
        {
            get
            {
                return global::LightSwitchApplication.RiskAssessment.DetailsClass.GetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskType);
            }
            set
            {
                global::LightSwitchApplication.RiskAssessment.DetailsClass.SetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RiskType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RiskType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RiskType_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.RiskAssessor RiskAssessor
        {
            get
            {
                return global::LightSwitchApplication.RiskAssessment.DetailsClass.GetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskAssessor);
            }
            set
            {
                global::LightSwitchApplication.RiskAssessment.DetailsClass.SetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskAssessor, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RiskAssessor_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RiskAssessor_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RiskAssessor_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.RiskAssessmentStatus RiskAssessmentStatus
        {
            get
            {
                return global::LightSwitchApplication.RiskAssessment.DetailsClass.GetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskAssessmentStatus);
            }
            set
            {
                global::LightSwitchApplication.RiskAssessment.DetailsClass.SetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskAssessmentStatus, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RiskAssessmentStatus_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RiskAssessmentStatus_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RiskAssessmentStatus_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.RiskAssessor RiskAssessmentApprover
        {
            get
            {
                return global::LightSwitchApplication.RiskAssessment.DetailsClass.GetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskAssessmentApprover);
            }
            set
            {
                global::LightSwitchApplication.RiskAssessment.DetailsClass.SetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskAssessmentApprover, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RiskAssessmentApprover_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RiskAssessmentApprover_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RiskAssessmentApprover_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.RiskAssessmentReview> RiskAssessmentReviews
        {
            get
            {
                return global::LightSwitchApplication.RiskAssessment.DetailsClass.GetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskAssessmentReviews);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.RiskAssessmentReview> RiskAssessmentReviewsQuery
        {
            get
            {
                return global::LightSwitchApplication.RiskAssessment.DetailsClass.GetQuery(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskAssessmentReviews);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.RiskAssessmentHazard> RiskAssessmentHazards
        {
            get
            {
                return global::LightSwitchApplication.RiskAssessment.DetailsClass.GetValue(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskAssessmentHazards);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.RiskAssessmentHazard> RiskAssessmentHazardsQuery
        {
            get
            {
                return global::LightSwitchApplication.RiskAssessment.DetailsClass.GetQuery(this, global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskAssessmentHazards);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.RiskAssessment,
                global::LightSwitchApplication.RiskAssessment.DetailsClass,
                global::LightSwitchApplication.RiskAssessment.DetailsClass.IImplementation,
                global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass>.Entry
                __RiskAssessmentEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass>.Entry(
                    global::LightSwitchApplication.RiskAssessment.DetailsClass.__RiskAssessment_CreateNew,
                    global::LightSwitchApplication.RiskAssessment.DetailsClass.__RiskAssessment_Created,
                    global::LightSwitchApplication.RiskAssessment.DetailsClass.__RiskAssessment_AllowSaveWithErrors);
            private static global::LightSwitchApplication.RiskAssessment __RiskAssessment_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.RiskAssessment> es)
            {
                return new global::LightSwitchApplication.RiskAssessment(es);
            }
            private static void __RiskAssessment_Created(global::LightSwitchApplication.RiskAssessment e)
            {
                e.RiskAssessment_Created();
            }
            private static bool __RiskAssessment_AllowSaveWithErrors(global::LightSwitchApplication.RiskAssessment e)
            {
                bool result = false;
                e.RiskAssessment_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string> ReferenceNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.ReferenceNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string> RiskAssessmentTitle
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskAssessmentTitle) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string> ProcessDescription
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.ProcessDescription) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string> PersonsAffected
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.PersonsAffected) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string> HowPersonsAffected
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.HowPersonsAffected) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>> InherentLikelihood
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.InherentLikelihood) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>> InherentImpact
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.InherentImpact) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>> InherentRisk
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.InherentRisk) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string> ControlMeasures
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.ControlMeasures) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>> ControlledLikehood
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.ControlledLikehood) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>> ControlledImpact
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.ControlledImpact) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>> ControlledRisk
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.ControlledRisk) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<global::System.DateTime>> DateApproved
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.DateApproved) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<global::System.DateTime>> DateEffective
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.DateEffective) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string> CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Created
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.Created) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string> ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Modified
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.Modified) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskType> RiskType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskType) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskType>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskAssessor> RiskAssessor
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskAssessor) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskAssessor>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskAssessmentStatus> RiskAssessmentStatus
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskAssessmentStatus) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskAssessmentStatus>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskAssessor> RiskAssessmentApprover
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskAssessmentApprover) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskAssessor>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskAssessmentReview> RiskAssessmentReviews
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskAssessmentReviews) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskAssessmentReview>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskAssessmentHazard> RiskAssessmentHazards
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskAssessmentHazards) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskAssessmentHazard>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new string ReferenceNumber { get; set; }
                new string RiskAssessmentTitle { get; set; }
                new string ProcessDescription { get; set; }
                new string PersonsAffected { get; set; }
                new string HowPersonsAffected { get; set; }
                new global::System.Nullable<int> InherentLikelihood { get; set; }
                new global::System.Nullable<int> InherentImpact { get; set; }
                new global::System.Nullable<int> InherentRisk { get; set; }
                new string ControlMeasures { get; set; }
                new global::System.Nullable<int> ControlledLikehood { get; set; }
                new global::System.Nullable<int> ControlledImpact { get; set; }
                new global::System.Nullable<int> ControlledRisk { get; set; }
                new global::System.Nullable<global::System.DateTime> DateApproved { get; set; }
                new global::System.Nullable<global::System.DateTime> DateEffective { get; set; }
                new string CreatedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Created { get; }
                new string ModifiedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Modified { get; }
                new byte[] RowVersion { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation RiskType { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation RiskAssessor { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation RiskAssessmentStatus { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation RiskAssessmentApprover { get; set; }
                new global::System.Collections.IEnumerable RiskAssessmentReviews { get; }
                new global::System.Collections.IEnumerable RiskAssessmentHazards { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RiskAssessment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, int>.Data> c, global::LightSwitchApplication.RiskAssessment.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.RiskAssessment e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.RiskAssessment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.RiskAssessment e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Entry
                    ReferenceNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Entry(
                        "ReferenceNumber",
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ReferenceNumber_Stub,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ReferenceNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ReferenceNumber_Validate,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ReferenceNumber_GetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ReferenceNumber_SetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ReferenceNumber_OnValueChanged);
                private static void _ReferenceNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RiskAssessment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Data> c, global::LightSwitchApplication.RiskAssessment.DetailsClass d, object sf)
                {
                    c(d, ref d._ReferenceNumber, sf);
                }
                private static bool _ReferenceNumber_ComputeIsReadOnly(global::LightSwitchApplication.RiskAssessment e)
                {
                    bool result = false;
                    e.ReferenceNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _ReferenceNumber_Validate(global::LightSwitchApplication.RiskAssessment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReferenceNumber_Validate(r);
                }
                private static string _ReferenceNumber_GetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.ImplementationEntity.ReferenceNumber;
                }
                private static void _ReferenceNumber_SetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ReferenceNumber = v;
                }
                private static void _ReferenceNumber_OnValueChanged(global::LightSwitchApplication.RiskAssessment e)
                {
                    e.ReferenceNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Entry
                    RiskAssessmentTitle = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Entry(
                        "RiskAssessmentTitle",
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessmentTitle_Stub,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessmentTitle_ComputeIsReadOnly,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessmentTitle_Validate,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessmentTitle_GetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessmentTitle_SetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessmentTitle_OnValueChanged);
                private static void _RiskAssessmentTitle_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RiskAssessment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Data> c, global::LightSwitchApplication.RiskAssessment.DetailsClass d, object sf)
                {
                    c(d, ref d._RiskAssessmentTitle, sf);
                }
                private static bool _RiskAssessmentTitle_ComputeIsReadOnly(global::LightSwitchApplication.RiskAssessment e)
                {
                    bool result = false;
                    e.RiskAssessmentTitle_IsReadOnly(ref result);
                    return result;
                }
                private static void _RiskAssessmentTitle_Validate(global::LightSwitchApplication.RiskAssessment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RiskAssessmentTitle_Validate(r);
                }
                private static string _RiskAssessmentTitle_GetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.ImplementationEntity.RiskAssessmentTitle;
                }
                private static void _RiskAssessmentTitle_SetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d, string v)
                {
                    d.ImplementationEntity.RiskAssessmentTitle = v;
                }
                private static void _RiskAssessmentTitle_OnValueChanged(global::LightSwitchApplication.RiskAssessment e)
                {
                    e.RiskAssessmentTitle_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Entry
                    ProcessDescription = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Entry(
                        "ProcessDescription",
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ProcessDescription_Stub,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ProcessDescription_ComputeIsReadOnly,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ProcessDescription_Validate,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ProcessDescription_GetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ProcessDescription_SetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ProcessDescription_OnValueChanged);
                private static void _ProcessDescription_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RiskAssessment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Data> c, global::LightSwitchApplication.RiskAssessment.DetailsClass d, object sf)
                {
                    c(d, ref d._ProcessDescription, sf);
                }
                private static bool _ProcessDescription_ComputeIsReadOnly(global::LightSwitchApplication.RiskAssessment e)
                {
                    bool result = false;
                    e.ProcessDescription_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProcessDescription_Validate(global::LightSwitchApplication.RiskAssessment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProcessDescription_Validate(r);
                }
                private static string _ProcessDescription_GetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.ImplementationEntity.ProcessDescription;
                }
                private static void _ProcessDescription_SetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ProcessDescription = v;
                }
                private static void _ProcessDescription_OnValueChanged(global::LightSwitchApplication.RiskAssessment e)
                {
                    e.ProcessDescription_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Entry
                    PersonsAffected = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Entry(
                        "PersonsAffected",
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._PersonsAffected_Stub,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._PersonsAffected_ComputeIsReadOnly,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._PersonsAffected_Validate,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._PersonsAffected_GetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._PersonsAffected_SetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._PersonsAffected_OnValueChanged);
                private static void _PersonsAffected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RiskAssessment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Data> c, global::LightSwitchApplication.RiskAssessment.DetailsClass d, object sf)
                {
                    c(d, ref d._PersonsAffected, sf);
                }
                private static bool _PersonsAffected_ComputeIsReadOnly(global::LightSwitchApplication.RiskAssessment e)
                {
                    bool result = false;
                    e.PersonsAffected_IsReadOnly(ref result);
                    return result;
                }
                private static void _PersonsAffected_Validate(global::LightSwitchApplication.RiskAssessment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PersonsAffected_Validate(r);
                }
                private static string _PersonsAffected_GetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.ImplementationEntity.PersonsAffected;
                }
                private static void _PersonsAffected_SetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d, string v)
                {
                    d.ImplementationEntity.PersonsAffected = v;
                }
                private static void _PersonsAffected_OnValueChanged(global::LightSwitchApplication.RiskAssessment e)
                {
                    e.PersonsAffected_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Entry
                    HowPersonsAffected = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Entry(
                        "HowPersonsAffected",
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._HowPersonsAffected_Stub,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._HowPersonsAffected_ComputeIsReadOnly,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._HowPersonsAffected_Validate,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._HowPersonsAffected_GetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._HowPersonsAffected_SetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._HowPersonsAffected_OnValueChanged);
                private static void _HowPersonsAffected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RiskAssessment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Data> c, global::LightSwitchApplication.RiskAssessment.DetailsClass d, object sf)
                {
                    c(d, ref d._HowPersonsAffected, sf);
                }
                private static bool _HowPersonsAffected_ComputeIsReadOnly(global::LightSwitchApplication.RiskAssessment e)
                {
                    bool result = false;
                    e.HowPersonsAffected_IsReadOnly(ref result);
                    return result;
                }
                private static void _HowPersonsAffected_Validate(global::LightSwitchApplication.RiskAssessment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.HowPersonsAffected_Validate(r);
                }
                private static string _HowPersonsAffected_GetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.ImplementationEntity.HowPersonsAffected;
                }
                private static void _HowPersonsAffected_SetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d, string v)
                {
                    d.ImplementationEntity.HowPersonsAffected = v;
                }
                private static void _HowPersonsAffected_OnValueChanged(global::LightSwitchApplication.RiskAssessment e)
                {
                    e.HowPersonsAffected_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>>.Entry
                    InherentLikelihood = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>>.Entry(
                        "InherentLikelihood",
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._InherentLikelihood_Stub,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._InherentLikelihood_ComputeIsReadOnly,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._InherentLikelihood_Validate,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._InherentLikelihood_GetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._InherentLikelihood_SetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._InherentLikelihood_OnValueChanged);
                private static void _InherentLikelihood_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RiskAssessment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.RiskAssessment.DetailsClass d, object sf)
                {
                    c(d, ref d._InherentLikelihood, sf);
                }
                private static bool _InherentLikelihood_ComputeIsReadOnly(global::LightSwitchApplication.RiskAssessment e)
                {
                    bool result = false;
                    e.InherentLikelihood_IsReadOnly(ref result);
                    return result;
                }
                private static void _InherentLikelihood_Validate(global::LightSwitchApplication.RiskAssessment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.InherentLikelihood_Validate(r);
                }
                private static global::System.Nullable<int> _InherentLikelihood_GetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.ImplementationEntity.InherentLikelihood;
                }
                private static void _InherentLikelihood_SetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.InherentLikelihood = v;
                }
                private static void _InherentLikelihood_OnValueChanged(global::LightSwitchApplication.RiskAssessment e)
                {
                    e.InherentLikelihood_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>>.Entry
                    InherentImpact = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>>.Entry(
                        "InherentImpact",
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._InherentImpact_Stub,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._InherentImpact_ComputeIsReadOnly,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._InherentImpact_Validate,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._InherentImpact_GetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._InherentImpact_SetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._InherentImpact_OnValueChanged);
                private static void _InherentImpact_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RiskAssessment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.RiskAssessment.DetailsClass d, object sf)
                {
                    c(d, ref d._InherentImpact, sf);
                }
                private static bool _InherentImpact_ComputeIsReadOnly(global::LightSwitchApplication.RiskAssessment e)
                {
                    bool result = false;
                    e.InherentImpact_IsReadOnly(ref result);
                    return result;
                }
                private static void _InherentImpact_Validate(global::LightSwitchApplication.RiskAssessment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.InherentImpact_Validate(r);
                }
                private static global::System.Nullable<int> _InherentImpact_GetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.ImplementationEntity.InherentImpact;
                }
                private static void _InherentImpact_SetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.InherentImpact = v;
                }
                private static void _InherentImpact_OnValueChanged(global::LightSwitchApplication.RiskAssessment e)
                {
                    e.InherentImpact_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>>.Entry
                    InherentRisk = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>>.Entry(
                        "InherentRisk",
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._InherentRisk_Stub,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._InherentRisk_ComputeIsReadOnly,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._InherentRisk_Validate,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._InherentRisk_GetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._InherentRisk_SetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._InherentRisk_OnValueChanged);
                private static void _InherentRisk_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RiskAssessment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.RiskAssessment.DetailsClass d, object sf)
                {
                    c(d, ref d._InherentRisk, sf);
                }
                private static bool _InherentRisk_ComputeIsReadOnly(global::LightSwitchApplication.RiskAssessment e)
                {
                    bool result = false;
                    e.InherentRisk_IsReadOnly(ref result);
                    return result;
                }
                private static void _InherentRisk_Validate(global::LightSwitchApplication.RiskAssessment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.InherentRisk_Validate(r);
                }
                private static global::System.Nullable<int> _InherentRisk_GetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.ImplementationEntity.InherentRisk;
                }
                private static void _InherentRisk_SetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.InherentRisk = v;
                }
                private static void _InherentRisk_OnValueChanged(global::LightSwitchApplication.RiskAssessment e)
                {
                    e.InherentRisk_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Entry
                    ControlMeasures = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Entry(
                        "ControlMeasures",
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ControlMeasures_Stub,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ControlMeasures_ComputeIsReadOnly,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ControlMeasures_Validate,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ControlMeasures_GetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ControlMeasures_SetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ControlMeasures_OnValueChanged);
                private static void _ControlMeasures_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RiskAssessment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Data> c, global::LightSwitchApplication.RiskAssessment.DetailsClass d, object sf)
                {
                    c(d, ref d._ControlMeasures, sf);
                }
                private static bool _ControlMeasures_ComputeIsReadOnly(global::LightSwitchApplication.RiskAssessment e)
                {
                    bool result = false;
                    e.ControlMeasures_IsReadOnly(ref result);
                    return result;
                }
                private static void _ControlMeasures_Validate(global::LightSwitchApplication.RiskAssessment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ControlMeasures_Validate(r);
                }
                private static string _ControlMeasures_GetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.ImplementationEntity.ControlMeasures;
                }
                private static void _ControlMeasures_SetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ControlMeasures = v;
                }
                private static void _ControlMeasures_OnValueChanged(global::LightSwitchApplication.RiskAssessment e)
                {
                    e.ControlMeasures_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>>.Entry
                    ControlledLikehood = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ControlledLikehood",
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ControlledLikehood_Stub,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ControlledLikehood_ComputeIsReadOnly,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ControlledLikehood_Validate,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ControlledLikehood_GetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ControlledLikehood_SetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ControlledLikehood_OnValueChanged);
                private static void _ControlledLikehood_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RiskAssessment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.RiskAssessment.DetailsClass d, object sf)
                {
                    c(d, ref d._ControlledLikehood, sf);
                }
                private static bool _ControlledLikehood_ComputeIsReadOnly(global::LightSwitchApplication.RiskAssessment e)
                {
                    bool result = false;
                    e.ControlledLikehood_IsReadOnly(ref result);
                    return result;
                }
                private static void _ControlledLikehood_Validate(global::LightSwitchApplication.RiskAssessment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ControlledLikehood_Validate(r);
                }
                private static global::System.Nullable<int> _ControlledLikehood_GetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.ImplementationEntity.ControlledLikehood;
                }
                private static void _ControlledLikehood_SetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ControlledLikehood = v;
                }
                private static void _ControlledLikehood_OnValueChanged(global::LightSwitchApplication.RiskAssessment e)
                {
                    e.ControlledLikehood_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>>.Entry
                    ControlledImpact = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ControlledImpact",
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ControlledImpact_Stub,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ControlledImpact_ComputeIsReadOnly,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ControlledImpact_Validate,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ControlledImpact_GetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ControlledImpact_SetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ControlledImpact_OnValueChanged);
                private static void _ControlledImpact_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RiskAssessment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.RiskAssessment.DetailsClass d, object sf)
                {
                    c(d, ref d._ControlledImpact, sf);
                }
                private static bool _ControlledImpact_ComputeIsReadOnly(global::LightSwitchApplication.RiskAssessment e)
                {
                    bool result = false;
                    e.ControlledImpact_IsReadOnly(ref result);
                    return result;
                }
                private static void _ControlledImpact_Validate(global::LightSwitchApplication.RiskAssessment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ControlledImpact_Validate(r);
                }
                private static global::System.Nullable<int> _ControlledImpact_GetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.ImplementationEntity.ControlledImpact;
                }
                private static void _ControlledImpact_SetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ControlledImpact = v;
                }
                private static void _ControlledImpact_OnValueChanged(global::LightSwitchApplication.RiskAssessment e)
                {
                    e.ControlledImpact_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>>.Entry
                    ControlledRisk = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ControlledRisk",
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ControlledRisk_Stub,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ControlledRisk_ComputeIsReadOnly,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ControlledRisk_Validate,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ControlledRisk_GetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ControlledRisk_SetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ControlledRisk_OnValueChanged);
                private static void _ControlledRisk_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RiskAssessment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.RiskAssessment.DetailsClass d, object sf)
                {
                    c(d, ref d._ControlledRisk, sf);
                }
                private static bool _ControlledRisk_ComputeIsReadOnly(global::LightSwitchApplication.RiskAssessment e)
                {
                    bool result = false;
                    e.ControlledRisk_IsReadOnly(ref result);
                    return result;
                }
                private static void _ControlledRisk_Validate(global::LightSwitchApplication.RiskAssessment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ControlledRisk_Validate(r);
                }
                private static global::System.Nullable<int> _ControlledRisk_GetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.ImplementationEntity.ControlledRisk;
                }
                private static void _ControlledRisk_SetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ControlledRisk = v;
                }
                private static void _ControlledRisk_OnValueChanged(global::LightSwitchApplication.RiskAssessment e)
                {
                    e.ControlledRisk_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    DateApproved = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "DateApproved",
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._DateApproved_Stub,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._DateApproved_ComputeIsReadOnly,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._DateApproved_Validate,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._DateApproved_GetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._DateApproved_SetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._DateApproved_OnValueChanged);
                private static void _DateApproved_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RiskAssessment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.RiskAssessment.DetailsClass d, object sf)
                {
                    c(d, ref d._DateApproved, sf);
                }
                private static bool _DateApproved_ComputeIsReadOnly(global::LightSwitchApplication.RiskAssessment e)
                {
                    bool result = false;
                    e.DateApproved_IsReadOnly(ref result);
                    return result;
                }
                private static void _DateApproved_Validate(global::LightSwitchApplication.RiskAssessment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DateApproved_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _DateApproved_GetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.ImplementationEntity.DateApproved;
                }
                private static void _DateApproved_SetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.DateApproved = global::LightSwitchApplication.RiskAssessment.DetailsClass.TruncateDate(v);
                }
                private static void _DateApproved_OnValueChanged(global::LightSwitchApplication.RiskAssessment e)
                {
                    e.DateApproved_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    DateEffective = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "DateEffective",
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._DateEffective_Stub,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._DateEffective_ComputeIsReadOnly,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._DateEffective_Validate,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._DateEffective_GetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._DateEffective_SetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._DateEffective_OnValueChanged);
                private static void _DateEffective_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RiskAssessment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.RiskAssessment.DetailsClass d, object sf)
                {
                    c(d, ref d._DateEffective, sf);
                }
                private static bool _DateEffective_ComputeIsReadOnly(global::LightSwitchApplication.RiskAssessment e)
                {
                    bool result = false;
                    e.DateEffective_IsReadOnly(ref result);
                    return result;
                }
                private static void _DateEffective_Validate(global::LightSwitchApplication.RiskAssessment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DateEffective_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _DateEffective_GetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.ImplementationEntity.DateEffective;
                }
                private static void _DateEffective_SetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.DateEffective = global::LightSwitchApplication.RiskAssessment.DetailsClass.TruncateDate(v);
                }
                private static void _DateEffective_OnValueChanged(global::LightSwitchApplication.RiskAssessment e)
                {
                    e.DateEffective_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Entry
                    CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Entry(
                        "CreatedBy",
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._CreatedBy_Stub,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._CreatedBy_Validate,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._CreatedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._CreatedBy_OnValueChanged);
                private static void _CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RiskAssessment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Data> c, global::LightSwitchApplication.RiskAssessment.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedBy, sf);
                }
                private static bool _CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.RiskAssessment e)
                {
                    bool result = false;
                    e.CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedBy_Validate(global::LightSwitchApplication.RiskAssessment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedBy_Validate(r);
                }
                private static string _CreatedBy_GetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedBy;
                }
                private static void _CreatedBy_OnValueChanged(global::LightSwitchApplication.RiskAssessment e)
                {
                    e.CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Created = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Created",
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._Created_Stub,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._Created_ComputeIsReadOnly,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._Created_Validate,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._Created_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._Created_OnValueChanged);
                private static void _Created_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RiskAssessment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.RiskAssessment.DetailsClass d, object sf)
                {
                    c(d, ref d._Created, sf);
                }
                private static bool _Created_ComputeIsReadOnly(global::LightSwitchApplication.RiskAssessment e)
                {
                    bool result = false;
                    e.Created_IsReadOnly(ref result);
                    return result;
                }
                private static void _Created_Validate(global::LightSwitchApplication.RiskAssessment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Created_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Created_GetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.ImplementationEntity.Created;
                }
                private static void _Created_OnValueChanged(global::LightSwitchApplication.RiskAssessment e)
                {
                    e.Created_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Entry
                    ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Entry(
                        "ModifiedBy",
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ModifiedBy_Stub,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ModifiedBy_Validate,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ModifiedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._ModifiedBy_OnValueChanged);
                private static void _ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RiskAssessment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Data> c, global::LightSwitchApplication.RiskAssessment.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedBy, sf);
                }
                private static bool _ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.RiskAssessment e)
                {
                    bool result = false;
                    e.ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedBy_Validate(global::LightSwitchApplication.RiskAssessment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedBy_Validate(r);
                }
                private static string _ModifiedBy_GetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedBy;
                }
                private static void _ModifiedBy_OnValueChanged(global::LightSwitchApplication.RiskAssessment e)
                {
                    e.ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Modified = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Modified",
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._Modified_Stub,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._Modified_ComputeIsReadOnly,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._Modified_Validate,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._Modified_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._Modified_OnValueChanged);
                private static void _Modified_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RiskAssessment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.RiskAssessment.DetailsClass d, object sf)
                {
                    c(d, ref d._Modified, sf);
                }
                private static bool _Modified_ComputeIsReadOnly(global::LightSwitchApplication.RiskAssessment e)
                {
                    bool result = false;
                    e.Modified_IsReadOnly(ref result);
                    return result;
                }
                private static void _Modified_Validate(global::LightSwitchApplication.RiskAssessment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Modified_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Modified_GetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.ImplementationEntity.Modified;
                }
                private static void _Modified_OnValueChanged(global::LightSwitchApplication.RiskAssessment e)
                {
                    e.Modified_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RiskAssessment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.RiskAssessment.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.RiskAssessment e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.RiskAssessment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.RiskAssessment e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskType>.Entry
                    RiskType = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskType>.Entry(
                        "RiskType",
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskType_Stub,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskType_ComputeIsReadOnly,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskType_Validate,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskType_GetCoreImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskType_GetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskType_SetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskType_Refresh,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskType_OnValueChanged);
                private static void _RiskType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RiskAssessment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskType>.Data> c, global::LightSwitchApplication.RiskAssessment.DetailsClass d, object sf)
                {
                    c(d, ref d._RiskType, sf);
                }
                private static bool _RiskType_ComputeIsReadOnly(global::LightSwitchApplication.RiskAssessment e)
                {
                    bool result = false;
                    e.RiskType_IsReadOnly(ref result);
                    return result;
                }
                private static void _RiskType_Validate(global::LightSwitchApplication.RiskAssessment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RiskType_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _RiskType_GetCoreImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.ImplementationEntity.RiskType;
                }
                private static global::LightSwitchApplication.RiskType _RiskType_GetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.RiskType, global::LightSwitchApplication.RiskType.DetailsClass>(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskType, ref d._RiskType);
                }
                private static void _RiskType_SetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d, global::LightSwitchApplication.RiskType v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskType, ref d._RiskType, (i, ev) => i.RiskType = ev, v);
                }
                private static void _RiskType_Refresh(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskType, ref d._RiskType);
                }
                private static void _RiskType_OnValueChanged(global::LightSwitchApplication.RiskAssessment e)
                {
                    e.RiskType_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskAssessor>.Entry
                    RiskAssessor = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskAssessor>.Entry(
                        "RiskAssessor",
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessor_Stub,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessor_ComputeIsReadOnly,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessor_Validate,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessor_GetCoreImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessor_GetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessor_SetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessor_Refresh,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessor_OnValueChanged);
                private static void _RiskAssessor_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RiskAssessment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskAssessor>.Data> c, global::LightSwitchApplication.RiskAssessment.DetailsClass d, object sf)
                {
                    c(d, ref d._RiskAssessor, sf);
                }
                private static bool _RiskAssessor_ComputeIsReadOnly(global::LightSwitchApplication.RiskAssessment e)
                {
                    bool result = false;
                    e.RiskAssessor_IsReadOnly(ref result);
                    return result;
                }
                private static void _RiskAssessor_Validate(global::LightSwitchApplication.RiskAssessment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RiskAssessor_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _RiskAssessor_GetCoreImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.ImplementationEntity.RiskAssessor;
                }
                private static global::LightSwitchApplication.RiskAssessor _RiskAssessor_GetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.RiskAssessor, global::LightSwitchApplication.RiskAssessor.DetailsClass>(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskAssessor, ref d._RiskAssessor);
                }
                private static void _RiskAssessor_SetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d, global::LightSwitchApplication.RiskAssessor v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskAssessor, ref d._RiskAssessor, (i, ev) => i.RiskAssessor = ev, v);
                }
                private static void _RiskAssessor_Refresh(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskAssessor, ref d._RiskAssessor);
                }
                private static void _RiskAssessor_OnValueChanged(global::LightSwitchApplication.RiskAssessment e)
                {
                    e.RiskAssessor_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskAssessmentStatus>.Entry
                    RiskAssessmentStatus = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskAssessmentStatus>.Entry(
                        "RiskAssessmentStatus",
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessmentStatus_Stub,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessmentStatus_ComputeIsReadOnly,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessmentStatus_Validate,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessmentStatus_GetCoreImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessmentStatus_GetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessmentStatus_SetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessmentStatus_Refresh,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessmentStatus_OnValueChanged);
                private static void _RiskAssessmentStatus_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RiskAssessment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskAssessmentStatus>.Data> c, global::LightSwitchApplication.RiskAssessment.DetailsClass d, object sf)
                {
                    c(d, ref d._RiskAssessmentStatus, sf);
                }
                private static bool _RiskAssessmentStatus_ComputeIsReadOnly(global::LightSwitchApplication.RiskAssessment e)
                {
                    bool result = false;
                    e.RiskAssessmentStatus_IsReadOnly(ref result);
                    return result;
                }
                private static void _RiskAssessmentStatus_Validate(global::LightSwitchApplication.RiskAssessment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RiskAssessmentStatus_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _RiskAssessmentStatus_GetCoreImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.ImplementationEntity.RiskAssessmentStatus;
                }
                private static global::LightSwitchApplication.RiskAssessmentStatus _RiskAssessmentStatus_GetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.RiskAssessmentStatus, global::LightSwitchApplication.RiskAssessmentStatus.DetailsClass>(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskAssessmentStatus, ref d._RiskAssessmentStatus);
                }
                private static void _RiskAssessmentStatus_SetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d, global::LightSwitchApplication.RiskAssessmentStatus v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskAssessmentStatus, ref d._RiskAssessmentStatus, (i, ev) => i.RiskAssessmentStatus = ev, v);
                }
                private static void _RiskAssessmentStatus_Refresh(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskAssessmentStatus, ref d._RiskAssessmentStatus);
                }
                private static void _RiskAssessmentStatus_OnValueChanged(global::LightSwitchApplication.RiskAssessment e)
                {
                    e.RiskAssessmentStatus_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskAssessor>.Entry
                    RiskAssessmentApprover = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskAssessor>.Entry(
                        "RiskAssessmentApprover",
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessmentApprover_Stub,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessmentApprover_ComputeIsReadOnly,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessmentApprover_Validate,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessmentApprover_GetCoreImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessmentApprover_GetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessmentApprover_SetImplementationValue,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessmentApprover_Refresh,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessmentApprover_OnValueChanged);
                private static void _RiskAssessmentApprover_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RiskAssessment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskAssessor>.Data> c, global::LightSwitchApplication.RiskAssessment.DetailsClass d, object sf)
                {
                    c(d, ref d._RiskAssessmentApprover, sf);
                }
                private static bool _RiskAssessmentApprover_ComputeIsReadOnly(global::LightSwitchApplication.RiskAssessment e)
                {
                    bool result = false;
                    e.RiskAssessmentApprover_IsReadOnly(ref result);
                    return result;
                }
                private static void _RiskAssessmentApprover_Validate(global::LightSwitchApplication.RiskAssessment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RiskAssessmentApprover_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _RiskAssessmentApprover_GetCoreImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.ImplementationEntity.RiskAssessmentApprover;
                }
                private static global::LightSwitchApplication.RiskAssessor _RiskAssessmentApprover_GetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.RiskAssessor, global::LightSwitchApplication.RiskAssessor.DetailsClass>(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskAssessmentApprover, ref d._RiskAssessmentApprover);
                }
                private static void _RiskAssessmentApprover_SetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass d, global::LightSwitchApplication.RiskAssessor v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskAssessmentApprover, ref d._RiskAssessmentApprover, (i, ev) => i.RiskAssessmentApprover = ev, v);
                }
                private static void _RiskAssessmentApprover_Refresh(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskAssessmentApprover, ref d._RiskAssessmentApprover);
                }
                private static void _RiskAssessmentApprover_OnValueChanged(global::LightSwitchApplication.RiskAssessment e)
                {
                    e.RiskAssessmentApprover_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskAssessmentReview>.Entry
                    RiskAssessmentReviews = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskAssessmentReview>.Entry(
                        "RiskAssessmentReviews",
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessmentReviews_Stub,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessmentReviews_GetReferencedEntities,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessmentReviews_GetEntityCollection);
                private static void _RiskAssessmentReviews_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RiskAssessment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskAssessmentReview>.Data> c, global::LightSwitchApplication.RiskAssessment.DetailsClass d, object sf)
                {
                    c(d, ref d._RiskAssessmentReviews, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.RiskAssessmentReview> _RiskAssessmentReviews_GetReferencedEntities(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.RiskAssessmentReview, global::LightSwitchApplication.RiskAssessmentReview.DetailsClass>(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskAssessmentReviews, ref d._RiskAssessmentReviews);
                }
                private static global::System.Collections.IEnumerable _RiskAssessmentReviews_GetEntityCollection(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.ImplementationEntity.RiskAssessmentReviews;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskAssessmentHazard>.Entry
                    RiskAssessmentHazards = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskAssessmentHazard>.Entry(
                        "RiskAssessmentHazards",
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessmentHazards_Stub,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessmentHazards_GetReferencedEntities,
                        global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties._RiskAssessmentHazards_GetEntityCollection);
                private static void _RiskAssessmentHazards_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RiskAssessment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskAssessmentHazard>.Data> c, global::LightSwitchApplication.RiskAssessment.DetailsClass d, object sf)
                {
                    c(d, ref d._RiskAssessmentHazards, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.RiskAssessmentHazard> _RiskAssessmentHazards_GetReferencedEntities(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.RiskAssessmentHazard, global::LightSwitchApplication.RiskAssessmentHazard.DetailsClass>(global::LightSwitchApplication.RiskAssessment.DetailsClass.PropertySetProperties.RiskAssessmentHazards, ref d._RiskAssessmentHazards);
                }
                private static global::System.Collections.IEnumerable _RiskAssessmentHazards_GetEntityCollection(global::LightSwitchApplication.RiskAssessment.DetailsClass d)
                {
                    return d.ImplementationEntity.RiskAssessmentHazards;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Data _ReferenceNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Data _RiskAssessmentTitle;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Data _ProcessDescription;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Data _PersonsAffected;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Data _HowPersonsAffected;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>>.Data _InherentLikelihood;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>>.Data _InherentImpact;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>>.Data _InherentRisk;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Data _ControlMeasures;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>>.Data _ControlledLikehood;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>>.Data _ControlledImpact;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<int>>.Data _ControlledRisk;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _DateApproved;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _DateEffective;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Data _CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Created;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, string>.Data _ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Modified;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskType>.Data _RiskType;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskAssessor>.Data _RiskAssessor;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskAssessmentStatus>.Data _RiskAssessmentStatus;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskAssessor>.Data _RiskAssessmentApprover;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskAssessmentReview>.Data _RiskAssessmentReviews;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.RiskAssessment, global::LightSwitchApplication.RiskAssessment.DetailsClass, global::LightSwitchApplication.RiskAssessmentHazard>.Data _RiskAssessmentHazards;
            
        }
    
        #endregion
    }
    
    #endregion
}
